#!/usr/bin/env bash
set -euo pipefail

# ---------------------------------------------------------------------------
# GRACE - CONFIGURATION AUTO-REPAIR + E2E EXECUTION
# ---------------------------------------------------------------------------

echo "------------------------------------------------------------"
echo " GRACE | Auto Repair: Config Paths + Immutable Logger Fix"
echo "------------------------------------------------------------"

REPO_ROOT="$(pwd)"
CONFIG_PATH="$REPO_ROOT/grace/config.py"
DATA_DIR="$REPO_ROOT/grace_data"

# 1. Ensure config.py exists and defines proper Path constants
echo "[1/3] Checking config.py …"

python3 - <<'PY'
from pathlib import Path
import os, sys

repo_root = Path(os.getcwd())
config_file = repo_root / "grace" / "config.py"
config_file.parent.mkdir(parents=True, exist_ok=True)

CONFIG_TEMPLATE = """# Auto-generated by fix_and_run.sh
from pathlib import Path
import os

_REPO_ROOT = Path(__file__).resolve().parents[1]
GRACE_DATA_DIR = Path(os.environ.get("GRACE_DATA_DIR", _REPO_ROOT / "grace_data"))
GRACE_DATA_DIR.mkdir(parents=True, exist_ok=True)

IMMUTABLE_LOG_PATH = GRACE_DATA_DIR / "immutable.audit.log"
TRUST_LEDGER_PATH  = GRACE_DATA_DIR / "trust_ledger.jsonl"
ED25519_SK_HEX = os.getenv("GRACE_ED25519_SK", "").strip()
ED25519_PUB_HEX = os.getenv("GRACE_ED25519_PUB", "").strip()
WORKFLOW_DIR = os.getenv("GRACE_WORKFLOW_DIR", "grace/workflows")
CHECKPOINT_EVERY_N = int(os.getenv("GRACE_CHECKPOINT_EVERY_N", "100"))
"""

if not config_file.exists():
    config_file.write_text(CONFIG_TEMPLATE, encoding="utf-8")
    print(f"[config] created new {config_file}")
else:
    text = config_file.read_text(encoding="utf-8")
    if "IMMUTABLE_LOG_PATH" not in text or "TRUST_LEDGER_PATH" not in text:
        config_file.write_text(CONFIG_TEMPLATE, encoding="utf-8")
        print(f"[config] patched {config_file}")
    else:
        print(f"[config] verified existing {config_file}")

# ensure dirs/files
data_dir = repo_root / "grace_data"
data_dir.mkdir(parents=True, exist_ok=True)
(data_dir / "immutable.audit.log").touch(exist_ok=True)
(data_dir / "trust_ledger.jsonl").touch(exist_ok=True)
print(f"[fs] ensured {data_dir} and log files exist")

PY

# 2. Clear Python cache to force reload
echo "[2/4] Clearing Python cache …"
find grace -name "__pycache__" -type d -prune -exec rm -rf {} + 2>/dev/null || true
find grace -name "*.pyc" -delete 2>/dev/null || true
echo "[cache] ✅ Cleared"

# 3. Sanity check for Path objects
echo "[3/4] Verifying Python imports …"
python3 - <<'PY'
from grace import config
from pathlib import Path
print("GRACE_DATA_DIR:", config.GRACE_DATA_DIR)
print("IMMUTABLE_LOG_PATH:", config.IMMUTABLE_LOG_PATH)
print("TRUST_LEDGER_PATH:", config.TRUST_LEDGER_PATH)
assert isinstance(config.GRACE_DATA_DIR, Path)
assert isinstance(config.IMMUTABLE_LOG_PATH, Path)
assert isinstance(config.TRUST_LEDGER_PATH, Path)
print("[verify] ✅ All paths are Path objects and accessible.")
PY

# 4. Run E2E system test (without exiting the terminal)
echo "[4/4] Launching GRACE end-to-end system test …"
python3 run_full_e2e_test.py || echo "[run] ⚠️ Test run completed with non-zero exit code (check logs)."

echo "------------------------------------------------------------"
echo " GRACE | Fix + Run completed."
echo "------------------------------------------------------------"
