$schema: "https://json-schema.org/draft/2020-12/schema"
version: "1.0.0"
description: "Unified event catalog mapping all Grace kernel events to their schemas"

events:
  # Intelligence kernel events
  INTEL_REQUESTED:        { $ref: "grace://contracts/intelligence.request.schema.json" }
  INTEL_INFER_COMPLETED:  { $ref: "grace://contracts/intelligence.result.schema.json" }
  INTEL_POLICY_VIOLATION: { $ref: "grace://contracts/intelligence.violation.schema.json" }
  
  # MLDL kernel events
  MLDL_TRAINING_STARTED:  { $ref: "grace://contracts/mldl.training.schema.json#/TrainingStarted" }
  MLDL_CANDIDATE_READY:   { $ref: "grace://contracts/mldl.training.schema.json#/TrainedBundle" }
  MLDL_EVALUATED:         { $ref: "grace://contracts/mldl.evaluation.schema.json" }
  MLDL_DEPLOYMENT_REQUESTED: { $ref: "grace://contracts/mldl.deploy.schema.json" }
  
  # Ingress kernel events  
  ING_CAPTURED_RAW:       { $ref: "grace://contracts/ingress.schema.json#/RawEvent" }
  ING_NORMALIZED:         { $ref: "grace://contracts/ingress.schema.json#/NormRecord" }
  ING_PUBLISHED:          { $ref: "grace://contracts/ingress.schema.json#/PublishedRecord" }
  
  # Memory kernel events
  MEM_WRITTEN:            { $ref: "grace://contracts/memory.item.schema.json#/MemoryItem" }
  MEM_READ:               { $ref: "grace://contracts/memory.query.schema.json" }
  MEM_RESULT:             { $ref: "grace://contracts/memory.result.schema.json" }
  
  # Orchestration kernel events
  ORCH_TASK_DISPATCHED:   { $ref: "grace://contracts/orch.task.schema.json#/OrchTask" }
  ORCH_TASK_COMPLETED:    { $ref: "grace://contracts/orch.result.schema.json" }
  
  # Resilience kernel events
  RES_INCIDENT_OPENED:    { $ref: "grace://contracts/resilience.events.yaml#/Incident" }
  RES_ACTION_APPLIED:     { $ref: "grace://contracts/resilience.events.yaml#/Action" }
  RES_SIGNAL:             { $ref: "grace://contracts/resilience.events.yaml#/Signal" }
  RES_DEGRADATION_ENTERED: { $ref: "grace://contracts/resilience.events.yaml#/Degradation" }
  
  # Multi-OS kernel events
  MOS_TASK_STARTED:       { $ref: "grace://contracts/multi_os.task.schema.json#/TaskStarted" }
  MOS_TASK_COMPLETED:     { $ref: "grace://contracts/multi_os.task.schema.json#/TaskCompleted" }
  MOS_HOST_HEALTH:        { $ref: "grace://contracts/multi_os.health.schema.json" }
  
  # Interface kernel events
  UI_ACTION:              { $ref: "grace://contracts/interface.action.schema.json#/UIAction" }
  UI_NOTIFICATION:        { $ref: "grace://contracts/interface.notification.schema.json" }
  UI_SESSION_STARTED:     { $ref: "grace://contracts/interface.session.schema.json" }
  
  # Governance kernel events
  GOVERNANCE_APPROVED:    { $ref: "grace://contracts/governance.decision.schema.json#/Approved" }
  GOVERNANCE_REJECTED:    { $ref: "grace://contracts/governance.decision.schema.json#/Rejected" }
  GOVERNANCE_NEEDS_REVIEW: { $ref: "grace://contracts/governance.review.schema.json" }
  
  # MLT kernel events
  MLT_INSIGHT_READY:      { $ref: "grace://contracts/mlt.insight.schema.json" }
  MLT_PLAN_PROPOSED:      { $ref: "grace://contracts/mlt.plan.schema.json" }
  MLT_EXPERIENCE:         { $ref: "grace://contracts/mlt.experience.schema.json" }

# Schema evolution compatibility matrix
compatibility:
  default: "backward"  # old consumers keep working
  overrides:
    "intelligence.result": "full"      # strict compatibility
    "governance.decision": "forward"   # new consumers work with old producers
    "mlt.experience": "none"           # breaking changes allowed