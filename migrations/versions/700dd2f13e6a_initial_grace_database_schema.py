"""Initial Grace database schema

Revision ID: 700dd2f13e6a
Revises: 
Create Date: 2025-09-28 19:35:13.611799

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '700dd2f13e6a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('collab_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('owner_user_id', sa.String(), nullable=False),
    sa.Column('document_content', sa.Text(), nullable=True),
    sa.Column('document_type', sa.String(), nullable=True),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('max_participants', sa.Integer(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('last_edit_by', sa.String(), nullable=True),
    sa.Column('last_edit_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_collab_sessions_owner', 'collab_sessions', ['owner_user_id'], unique=False)
    op.create_index(op.f('ix_collab_sessions_owner_user_id'), 'collab_sessions', ['owner_user_id'], unique=False)
    op.create_index('ix_collab_sessions_public', 'collab_sessions', ['is_public'], unique=False)
    op.create_index('ix_collab_sessions_status', 'collab_sessions', ['status'], unique=False)
    op.create_table('event_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('trace_id', sa.String(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('session_id', sa.UUID(), nullable=True),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_event_logs_event_type'), 'event_logs', ['event_type'], unique=False)
    op.create_index(op.f('ix_event_logs_session_id'), 'event_logs', ['session_id'], unique=False)
    op.create_index('ix_event_logs_timestamp', 'event_logs', ['timestamp'], unique=False)
    op.create_index(op.f('ix_event_logs_trace_id'), 'event_logs', ['trace_id'], unique=False)
    op.create_index('ix_event_logs_type_source', 'event_logs', ['event_type', 'source'], unique=False)
    op.create_index(op.f('ix_event_logs_user_id'), 'event_logs', ['user_id'], unique=False)
    op.create_index('ix_event_logs_user_session', 'event_logs', ['user_id', 'session_id'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('notification_type', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('is_actionable', sa.Boolean(), nullable=True),
    sa.Column('action_url', sa.String(), nullable=True),
    sa.Column('priority', sa.String(), nullable=False),
    sa.Column('delivery_channels', postgresql.ARRAY(String()), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_notifications_created', 'notifications', ['created_at'], unique=False)
    op.create_index('ix_notifications_expires', 'notifications', ['expires_at'], unique=False)
    op.create_index(op.f('ix_notifications_is_read'), 'notifications', ['is_read'], unique=False)
    op.create_index(op.f('ix_notifications_user_id'), 'notifications', ['user_id'], unique=False)
    op.create_index('ix_notifications_user_read', 'notifications', ['user_id', 'is_read'], unique=False)
    op.create_table('sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('context', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_sessions_created_at', 'sessions', ['created_at'], unique=False)
    op.create_index(op.f('ix_sessions_user_id'), 'sessions', ['user_id'], unique=False)
    op.create_index('ix_sessions_user_status', 'sessions', ['user_id', 'status'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('task_type', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('priority', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('result_data', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_tasks_scheduled', 'tasks', ['scheduled_at'], unique=False)
    op.create_index(op.f('ix_tasks_status'), 'tasks', ['status'], unique=False)
    op.create_index('ix_tasks_status_priority', 'tasks', ['status', 'priority'], unique=False)
    op.create_index(op.f('ix_tasks_task_type'), 'tasks', ['task_type'], unique=False)
    op.create_index('ix_tasks_type_status', 'tasks', ['task_type', 'status'], unique=False)
    op.create_index(op.f('ix_tasks_user_id'), 'tasks', ['user_id'], unique=False)
    op.create_table('knowledge_entries',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('content_type', sa.String(), nullable=True),
    sa.Column('content_hash', sa.String(), nullable=False),
    sa.Column('trust_score', sa.Float(), nullable=True),
    sa.Column('credibility_score', sa.Float(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('embedding', sa.JSON(), nullable=True),
    sa.Column('w5h_who', postgresql.ARRAY(String()), nullable=True),
    sa.Column('w5h_what', postgresql.ARRAY(String()), nullable=True),
    sa.Column('w5h_when', postgresql.ARRAY(String()), nullable=True),
    sa.Column('w5h_where', postgresql.ARRAY(String()), nullable=True),
    sa.Column('w5h_why', postgresql.ARRAY(String()), nullable=True),
    sa.Column('w5h_how', postgresql.ARRAY(String()), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_knowledge_entries_content_hash'), 'knowledge_entries', ['content_hash'], unique=False)
    op.create_index('ix_knowledge_entries_created', 'knowledge_entries', ['created_at'], unique=False)
    op.create_index('ix_knowledge_entries_hash', 'knowledge_entries', ['content_hash'], unique=False)
    op.create_index('ix_knowledge_entries_trust', 'knowledge_entries', ['trust_score'], unique=False)
    op.create_index('ix_knowledge_entries_user', 'knowledge_entries', ['user_id'], unique=False)
    op.create_index(op.f('ix_knowledge_entries_user_id'), 'knowledge_entries', ['user_id'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('content_type', sa.String(), nullable=True),
    sa.Column('message_index', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('w5h_who', postgresql.ARRAY(String()), nullable=True),
    sa.Column('w5h_what', postgresql.ARRAY(String()), nullable=True),
    sa.Column('w5h_when', postgresql.ARRAY(String()), nullable=True),
    sa.Column('w5h_where', postgresql.ARRAY(String()), nullable=True),
    sa.Column('w5h_why', postgresql.ARRAY(String()), nullable=True),
    sa.Column('w5h_how', postgresql.ARRAY(String()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['messages.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_messages_created_at', 'messages', ['created_at'], unique=False)
    op.create_index('ix_messages_role', 'messages', ['role'], unique=False)
    op.create_index('ix_messages_session_index', 'messages', ['session_id', 'message_index'], unique=False)
    op.create_table('panels',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('panel_type', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('content', sa.JSON(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('is_visible', sa.Boolean(), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('session_users',
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('session_id', 'user_id')
    )
    op.create_table('fragments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('message_id', sa.UUID(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('content_hash', sa.String(), nullable=False),
    sa.Column('start_pos', sa.Integer(), nullable=False),
    sa.Column('end_pos', sa.Integer(), nullable=False),
    sa.Column('embedding', sa.JSON(), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_fragments_content_hash'), 'fragments', ['content_hash'], unique=False)
    op.create_index('ix_fragments_hash', 'fragments', ['content_hash'], unique=False)
    op.create_index('ix_fragments_message', 'fragments', ['message_id'], unique=False)
    op.create_table('knowledge_entry_tags',
    sa.Column('knowledge_entry_id', sa.UUID(), nullable=False),
    sa.Column('tag', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['knowledge_entry_id'], ['knowledge_entries.id'], ),
    sa.PrimaryKeyConstraint('knowledge_entry_id', 'tag')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('knowledge_entry_tags')
    op.drop_index('ix_fragments_message', table_name='fragments')
    op.drop_index('ix_fragments_hash', table_name='fragments')
    op.drop_index(op.f('ix_fragments_content_hash'), table_name='fragments')
    op.drop_table('fragments')
    op.drop_table('session_users')
    op.drop_table('panels')
    op.drop_index('ix_messages_session_index', table_name='messages')
    op.drop_index('ix_messages_role', table_name='messages')
    op.drop_index('ix_messages_created_at', table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_knowledge_entries_user_id'), table_name='knowledge_entries')
    op.drop_index('ix_knowledge_entries_user', table_name='knowledge_entries')
    op.drop_index('ix_knowledge_entries_trust', table_name='knowledge_entries')
    op.drop_index('ix_knowledge_entries_hash', table_name='knowledge_entries')
    op.drop_index('ix_knowledge_entries_created', table_name='knowledge_entries')
    op.drop_index(op.f('ix_knowledge_entries_content_hash'), table_name='knowledge_entries')
    op.drop_table('knowledge_entries')
    op.drop_index(op.f('ix_tasks_user_id'), table_name='tasks')
    op.drop_index('ix_tasks_type_status', table_name='tasks')
    op.drop_index(op.f('ix_tasks_task_type'), table_name='tasks')
    op.drop_index('ix_tasks_status_priority', table_name='tasks')
    op.drop_index(op.f('ix_tasks_status'), table_name='tasks')
    op.drop_index('ix_tasks_scheduled', table_name='tasks')
    op.drop_table('tasks')
    op.drop_index('ix_sessions_user_status', table_name='sessions')
    op.drop_index(op.f('ix_sessions_user_id'), table_name='sessions')
    op.drop_index('ix_sessions_created_at', table_name='sessions')
    op.drop_table('sessions')
    op.drop_index('ix_notifications_user_read', table_name='notifications')
    op.drop_index(op.f('ix_notifications_user_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_is_read'), table_name='notifications')
    op.drop_index('ix_notifications_expires', table_name='notifications')
    op.drop_index('ix_notifications_created', table_name='notifications')
    op.drop_table('notifications')
    op.drop_index('ix_event_logs_user_session', table_name='event_logs')
    op.drop_index(op.f('ix_event_logs_user_id'), table_name='event_logs')
    op.drop_index('ix_event_logs_type_source', table_name='event_logs')
    op.drop_index(op.f('ix_event_logs_trace_id'), table_name='event_logs')
    op.drop_index('ix_event_logs_timestamp', table_name='event_logs')
    op.drop_index(op.f('ix_event_logs_session_id'), table_name='event_logs')
    op.drop_index(op.f('ix_event_logs_event_type'), table_name='event_logs')
    op.drop_table('event_logs')
    op.drop_index('ix_collab_sessions_status', table_name='collab_sessions')
    op.drop_index('ix_collab_sessions_public', table_name='collab_sessions')
    op.drop_index(op.f('ix_collab_sessions_owner_user_id'), table_name='collab_sessions')
    op.drop_index('ix_collab_sessions_owner', table_name='collab_sessions')
    op.drop_table('collab_sessions')
    # ### end Alembic commands ###
