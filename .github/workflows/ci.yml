name: Grace CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-type-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Format check with black
      run: |
        black --check --diff .
        
    - name: Type check with mypy
      run: |
        mypy grace/ --ignore-missing-imports --no-strict-optional
        
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: grace_governance
          POSTGRES_USER: grace_user
          POSTGRES_PASSWORD: grace_pass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
          
      chroma:
        image: chromadb/chroma:latest
        ports:
          - 8000:8000
          
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Set up test environment
      run: |
        cp .env.template .env
        # Set test database URL
        echo "DATABASE_URL=postgresql://grace_user:grace_pass@localhost:5432/grace_governance" >> .env
        echo "REDIS_URL=redis://localhost:6379" >> .env
        echo "CHROMA_URL=http://localhost:8000" >> .env
        
    - name: Run database migrations
      run: |
        # Initialize test database
        PGPASSWORD=grace_pass psql -h localhost -U grace_user -d grace_governance -f init_db/01_init_grace_db.sql || true
        
    - name: Run tests
      run: |
        python -m pytest demo_and_tests/tests/ -v --tb=short
        
    - name: Run governance examples
      run: |
        python governance_examples.py
        
  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
        
    - name: Security scan with bandit
      run: |
        bandit -r grace/ -f json -o bandit-report.json || true
        
    - name: Check for known security vulnerabilities
      run: |
        pip freeze | safety check --json --output safety-report.json || true
        
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json