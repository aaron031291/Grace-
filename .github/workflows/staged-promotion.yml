# Example GitHub Actions Workflow for Staged Promotion
# .github/workflows/staged-promotion.yml

name: Staged Promotion

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build image
      run: |
        docker build -t grace_api:latest . || {
          echo "::error::Docker build failed"
          exit 1
        }
    
    - name: Test image
      run: |
        docker run --rm grace_api:latest python -c "import grace; print('âœ… Grace imports')"
    
    - name: Save image
      run: |
        docker save grace_api:latest | gzip > grace_api.tar.gz
    
    - name: Upload image
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: grace_api.tar.gz
        retention-days: 7
  
  security:
    name: Security Checks
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Run security checks
      run: |
        chmod +x scripts/ci_security_checks.sh
        bash scripts/ci_security_checks.sh || echo "::warning::Security checks completed with warnings"
      continue-on-error: true
    
    - name: Upload security reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          bandit-report.json
        if-no-files-found: warn
  
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build, security]
    environment: staging
    
    steps:
    - name: Deploy notice
      run: |
        echo "ðŸš€ Would deploy to staging environment"
        echo "Image: grace_api:latest"
        echo "Environment: staging"
